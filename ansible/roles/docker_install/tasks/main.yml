---
# tasks file for docker_install
- name: Wait for APT Lock
  ansible.builtin.import_tasks: common/wait_lock.yml
  
- name: "Update apt cache & install packages to allow apt to use a repository over HTTPS"
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes

- name: "Make directory for Docker’s official GPG key"
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: "Add Docker’s official GPG key"
  ansible.builtin.shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  changed_when: false

- name: "Set up the repository"
  ansible.builtin.shell: |
    echo \
    "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  changed_when: false

- name: "Update the apt package index & Install Docker Engine, containerd, and Docker Compose"
  ansible.builtin.apt:
    name: "{{ dpackages }}"
    state: present
    update_cache: true
  ignore_errors: true

- name: Install requirements
  ansible.builtin.pip:
    name: "{{ python_moduls }}"

- name: "Enable docker service"
  ansible.builtin.service:
    name: docker
    enabled: true
    state: reloaded

- name: Add the user 'ubuntu' to the group 'docker'
  ansible.builtin.user:
    name: ubuntu
    groups: docker
    append: true